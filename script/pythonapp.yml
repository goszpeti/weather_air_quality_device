# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  cleaner:
    runs-on: self-hosted
    steps:
      - name: Runner workspace path
        run: |
          echo "Stopping Docker containers"
          docker stop $(docker ps -q) || true
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"

  testOnTarget:
    runs-on: self-hosted
    needs: cleaner
    timeout-minutes: 15
    env:
      DISPLAY: ':0'
      PYTEST_CMD: "source .venv/bin/activate & pytest -v --cov-report=term --cov=waqd --cov-branch --junit-xml=result.xml --cov-append"
    steps:
    - uses: actions/checkout@v2
    - name: Install system libs
      run: | 
        sudo apt -y install python3-libgpiod python3-venv
        sudo apt -y install qt5-default python3-pyqt5 python3-pyqt5.qtsvg python3-pyqt5.qtchart python3-sip
    - name: Setup pip and create venv
      run: | 
        python3 -m pip install --upgrade pip
        python3 -m venv .venv --system-site-packages
    - name: Activate venv and install test deps
      run: |
        source .venv/bin/activate
        pip3 install -r test/requirements.txt
        python3 setup.py egg_info
        pip3 install -e .
    - name: Test basic modules
      run: source .venv/bin/activate & pytest -v --cov-report=term --cov=waqd --cov-branch --cov-append test/basics
    - name: Test components
      run: source .venv/bin/activate & pytest -v --cov-report=term --cov=waqd --cov-branch --cov-append  test/components
    - name: Test ui
      run: source .venv/bin/activate & pytest -v --cov-report=term --cov=waqd --cov-branch --cov-append test/ui
    - name: Test integration
      run: source .venv/bin/activate & pytest -v --cov-report=term --cov=waqd --cov-branch --cov-append -m integration
  testUpdaterInDocker:
    runs-on: self-hosted
    needs: testOnTarget
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: |
        pip3 install -r test/requirements.txt
        pip3 install -e .
        source .venv/bin/activate & pytest -v --capture=no -m "updater" --disable-pytest-warnings
